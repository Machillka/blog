<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Workflow on Machillka's Blog</title><link>https://blog.machillka.me/categories/workflow/</link><description>Recent content in Workflow on Machillka's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 20 Jun 2025 00:00:42 +0800</lastBuildDate><atom:link href="https://blog.machillka.me/categories/workflow/index.xml" rel="self" type="application/rss+xml"/><item><title>笔记目录工作流</title><link>https://blog.machillka.me/p/%E7%AC%94%E8%AE%B0%E7%9B%AE%E5%BD%95%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Fri, 20 Jun 2025 00:00:42 +0800</pubDate><guid>https://blog.machillka.me/p/%E7%AC%94%E8%AE%B0%E7%9B%AE%E5%BD%95%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>&lt;h1 id="综述">综述
&lt;/h1>&lt;p>文本编辑器使用 Obsidian
云端存储 Github
比之前==加强的一点== —— 可以选择是否要上传到 Blog 上&lt;/p>
&lt;p>早年想到的方案是在 github 上跨仓库调用，但是这样无法实现&lt;/p>
&lt;h1 id="实现">实现
&lt;/h1>&lt;h2 id="针对-blog-system">针对 Blog System
&lt;/h2>&lt;p>首先使用 Hugo 快速搭建静态 blog 的一个主框架（主要是对 Go 比较熟悉
接着快速加入 theme 等子模块
使用 Github Action 自动部署到 Pages 上&lt;/p>
&lt;h2 id="针对-obsidian">针对 Obsidian
&lt;/h2>&lt;ol>
&lt;li>把普通笔记和博客文章的元数据封装成 Template&lt;/li>
&lt;li>Quick Add
&lt;ol>
&lt;li>先搭建基础模型 —— 创建两个 Choice 分别对应通过模板创建普通笔记和博客笔记&lt;/li>
&lt;li>编写一个宏 —— 包含把当前激活的文件封装成 Hugo Pages 需要的形式&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>最后再次利用 Quick Add 调用脚本实现上传到 Github 上触发条件可以是手动或者保存时自动调用&lt;/li>
&lt;li>编写 workflow 以调用 Github Action 自动部署&lt;/li>
&lt;/ol>
&lt;h1 id="踩坑">踩坑
&lt;/h1>&lt;h2 id="template">Template
&lt;/h2>&lt;p>模板生成的时间与 Hugo 不对应，导致无法在 Hugo 上构建&lt;/p>
&lt;h2 id="pages">Pages
&lt;/h2>&lt;p>没有添加 CNAME 解析，导致域名绑定失效&lt;/p>
&lt;h2 id="quick-add">Quick Add
&lt;/h2>
&lt;blockquote class="alert alert-danger">
&lt;p class="alert-heading">
非常恶心
&lt;/p>
&lt;/blockquote>
&lt;p>没有重启 Obsidian 调用外部 JS 会提示空！&lt;/p>
&lt;h2 id="js">JS
&lt;/h2>&lt;p>&lt;del>速通 JS 导致写的很烂&lt;/del>&lt;/p>
&lt;p>调用 powershell 的时候 使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">exec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">powershell&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>而不是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">exec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pwsh&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>powershell 默认路径是 Windows 下的垃圾东西，也没设置 Proxy，导致连接 Github 可能失败&lt;/p>
&lt;h1 id="未来可期">未来可期
&lt;/h1>&lt;p>封装成一个插件丢到社区里&lt;/p></description></item></channel></rss>